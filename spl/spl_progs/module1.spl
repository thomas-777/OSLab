//process manager module

alias functNum R1;
alias currentPID R2;

//GET PCB ENTRY
if(functNum==1) then
    alias i R2;
    i=1;
    while(i<16) do
        if([PROCESS_TABLE + 16*i+4]==TERMINATED) then
            R0=i;
            [PROCESS_TABLE + 16*i+4]=ALLOCATED;
            [PROCESS_TABLE + i * 16 + 1] = i;
            [PROCESS_TABLE + i * 16 + 14] = PAGE_TABLE_BASE + (20 * i);
            [PROCESS_TABLE + i * 16 + 15] = 10;
            return;
        endif;
        i=i+1;
    endwhile;
    R0=-1;
    return;
endif;


//exit process
if(functNum==3) then
    multipush(R1,R2);

    R1=4;
    R2=currentPID;

    call MOD_1;

    R1=2;
    R2=currentPID;

    call MOD_1;

    multipop(R1,R2);



    if([PROCESS_TABLE + 16*currentPID +9]!=9) then
        alias i R3;
        i=0;
        while(i<16) do
            if([PROCESS_TABLE+16*i+4]==WAIT_PROCESS &&[PROCESS_TABLE + 16*i + 5]==currentPID) then
                [PROCESS_TABLE + 16*i + 4]=READY;
                [PROCESS_TABLE + 16*i + 5]=0;
                if([PROCESS_TABLE+16*i+2]==currentPID) then
                    [PROCESS_TABLE+16*i+2]=-1;
                endif;
            endif;
            i=i+1;
        endwhile;
    endif;
    [PROCESS_TABLE+16*currentPID+4]=TERMINATED;
    return;
endif;

//free userareapage
if(functNum==2) then
    alias userareapage R3;
    userareapage=[PROCESS_TABLE+16*currentPID+11];
    alias i R4;
    i = 512 - 16;
    while (i < 512) do
        if([userareapage*512+i]==SEMAPHORE) then
            multipush(R1,R2,R3,R4);
            R1=7;
            R2=[SYSTEM_STATUS_TABLE+1];
            R3=[userareapage*512+i+1];
        
            call MOD_0;
            multipop(R1,R2,R3,R4);
        endif;
        i=i+2; 
    endwhile;
    multipush(R1,R2,R3);

    R1=2;
    R2=userareapage;

    call MOD_2;

    multipop(R1,R2,R3);
    return;
endif;

//free page table
if(functNum==4) then

    [PTBR + 0] = -1;
    [PTBR + 1] = "0000";
    [PTBR + 2] = -1;
    [PTBR + 3] = "0000";

    alias i R3;
    alias pageNum R4;
    i=1;
    while(i<(PTLR-1)) do
        pageNum=[PTBR + 2+2*i];

        if(pageNum!=-1) then
            multipush(R1,R2,R3,R4);

            R1=2;
            R2=pageNum;
            call MOD_2;

            multipop(R1,R2,R3,R4);

            [PTBR + 2 + 2 * i] = -1;
            [PTBR + 3 + 2 * i] = "0000";

        endif;
        i=i+1;
    endwhile;

    i=2;

    while(i<10) do
        if ([DISK_MAP_TABLE + currentPID * 10 + i] != -1) then
            if(i<4||i>7) then
                multipush(R1, R2, R3, R4);

                R1 = 4;
                R3 = currentPID;
                R2 = [DISK_MAP_TABLE + currentPID * 10 + i];

                call MOD_2;

                multipop(R1, R2, R3, R4);
            endif;
            [DISK_MAP_TABLE + currentPID * 10 + i] = -1;
        endif;
        i=i+1;
    endwhile;
    return;
endif;




