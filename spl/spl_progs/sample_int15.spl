[PROCESS_TABLE+16*[SYSTEM_STATUS_TABLE+1]+13]=SP;

alias userSP R0;
userSP=SP;

SP=[PROCESS_TABLE+16*[SYSTEM_STATUS_TABLE+1]+11]*512-1;

[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+9]=21;

if([SYSTEM_STATUS_TABLE+1]!=1) then
    [[PTBR+2*((userSP-1)/512)]*512 + (userSP-1)%512]=-1;
    [PROCESS_TABLE+16*[SYSTEM_STATUS_TABLE+1]+9]=0;
     SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
    ireturn;
endif;
//kill all
R1=5;
R2=[SYSTEM_STATUS_TABLE+1];
call MOD_1;
//storee buffer table
alias i R3;
i=0;
while(i<4) do
    if([BUFFER_TABLE+4*i+1]==1) then
        backup;
        R1=1;
        R2=[SYSTEM_STATUS_TABLE+1];
        R4=[BUFFER_TABLE+4*i];
        R3=BUFFER_BASE+i;
        
        call MOD_4;
        restore;
    endif;
    i=i+1;
endwhile;

//inode table
R1 = 1;
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = 59;
R4 = 3;
call MOD_4;

// user table
R1 = 1;
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = 60;
R4 = 4;
call MOD_4;

// root file
R1 = 1;
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = 62;
R4 = 5;
call MOD_4;

// disk free list
R1 = 1;
R2 = [SYSTEM_STATUS_TABLE + 1];
R3 = 61;
R4 = 2;
call MOD_4;


[PROCESS_TABLE+16*[SYSTEM_STATUS_TABLE+1]+9]=0;
SP=[PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+13];
halt;
