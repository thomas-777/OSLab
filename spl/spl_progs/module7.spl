//library
loadi(63,13);
loadi(64,14);

//timer
loadi(4, 17);
loadi(5, 18);

//init
loadi(65,7);
loadi(66,8);

//int 10
loadi(22,35);
loadi(23,36);

//evennos
loadi(83,69);

//primenos
loadi(89,70);


//module5
loadi(50,63);
loadi(51,64);

//exception
loadi(2, 15);
loadi(3, 16);

//int7
loadi(16,29);
loadi(17,30);

//module0
loadi(40,53);
loadi(41,54);

//module0
loadi(48,61);
loadi(49,62);

//init_page_Table

//changing_the_PTBR_value_for_init_PTLR_remains_the_same
PTBR = PAGE_TABLE_BASE+20;
PTLR=10;

//initialize terminal status table
[TERMINAL_STATUS_TABLE]=0;

//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 78;
[PTBR+5] = "0110";
[PTBR+6] = 79;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 65;
[PTBR+9] = "0100";
[PTBR+10] = 66;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 76;
[PTBR+17] = "0110";
[PTBR+18] = 77;
[PTBR+19] = "0110";

//pid_for_init
[PROCESS_TABLE + 16 + 1] = 1;

//init_process_gets_Scheduled_first
[PROCESS_TABLE + 16 + 4]=CREATED;

//user_area_page
[PROCESS_TABLE + 16 + 11] = 80;

//KPTR_for_init
[PROCESS_TABLE + 16  + 12] = 0;

//UPTR_for_init
[PROCESS_TABLE + 16  + 13] = 8*512;

//PTBR_for_init
[PROCESS_TABLE + 16 + 14] = PTBR;

//PTLR_for_init
[PROCESS_TABLE + 16 + 15] = PTLR;

[76*512] = [65 * 512 + 1];

//entries for evennos
//changing_the_PTBR_value_for_even_PTLR_remains_the_same
PTBR = PAGE_TABLE_BASE+40;
PTLR=10;


//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = 84;
[PTBR+5] = "0110";
[PTBR+6] = 85;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 83;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 86;
[PTBR+17] = "0110";
[PTBR+18] = 87;
[PTBR+19] = "0110";

//pid_for_even
[PROCESS_TABLE + 32 + 1] = 2;

//even_process_gets_Scheduled_first
[PROCESS_TABLE + 32 + 4]=CREATED;

//user_area_page
[PROCESS_TABLE + 32 + 11] = 88;

//KPTR_for_even
[PROCESS_TABLE + 32  + 12] = 0;

//UPTR_for_even
[PROCESS_TABLE + 32  + 13] = 8*512;

//PTBR_for_even
[PROCESS_TABLE + 32 + 14] = PTBR;

//PTLR_for_even
[PROCESS_TABLE + 32 + 15] = PTLR;

[86*512]=[83*512+1];


//entries for primenos
//changing_the_PTBR_value_for_prime_PTLR_remains_the_same
PTBR = PAGE_TABLE_BASE+60;
PTLR=10;


//Library
[PTBR+0] = 63;
[PTBR+1] = "0100";
[PTBR+2] = 64;
[PTBR+3] = "0100";

//Heap
[PTBR+4] = -1;
[PTBR+5] = "0110";
[PTBR+6] = -1;
[PTBR+7] = "0110";

//Code
[PTBR+8] = 89;
[PTBR+9] = "0100";
[PTBR+10] = -1;
[PTBR+11] = "0100";
[PTBR+12] = -1;
[PTBR+13] = "0000";
[PTBR+14] = -1;
[PTBR+15] = "0000";

//Stack
[PTBR+16] = 90;
[PTBR+17] = "0110";
[PTBR+18] = -1;
[PTBR+19] = "0110";

//pid_for_prime
[PROCESS_TABLE + 48 + 1] = 3;

//prime_process_gets_Scheduled_first
[PROCESS_TABLE + 48 + 4]=CREATED;

//user_area_page
[PROCESS_TABLE + 48 + 11] = 94;

//KPTR_for_prime
[PROCESS_TABLE + 48  + 12] = 0;

//UPTR_for_prime
[PROCESS_TABLE + 48  + 13] = 8*512;

//PTBR_for_prime
[PROCESS_TABLE + 48 + 14] = PTBR;

//PTLR_for_prime
[PROCESS_TABLE + 48 + 15] = PTLR;

[90*512]=[89*512+1];


alias i R0;
i = 4;
while (i < 16) do
    [PROCESS_TABLE + i * 16 + 4] = TERMINATED;
    i = i + 1;
endwhile;

return;