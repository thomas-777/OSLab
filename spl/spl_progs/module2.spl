//memory manager

alias functNum R1;


//get free page
if(functNum==1) then

    //increment wait mem count
    [SYSTEM_STATUS_TABLE+3]=[SYSTEM_STATUS_TABLE+3]+1;

    //while mem count==0
    while([SYSTEM_STATUS_TABLE+2]==0) do    
        [PROCESS_TABLE+[SYSTEM_STATUS_TABLE+1]*16+4]=WAIT_MEM;
        multipush(R1);

        call MOD_5;

        multipop(R1);
    endwhile;

    //decrement wait count
    [SYSTEM_STATUS_TABLE+3]=[SYSTEM_STATUS_TABLE+3]-1;

    //INCREMENT MEM FREE COUNT
    [SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]-1;

    alias i R3;

    i=0;
    while([MEMORY_FREE_LIST+i]!=0) do  
        i=i+1;
    endwhile;
    [MEMORY_FREE_LIST+i]=1;
    R0=i;

    return;

endif;

//release page
if(functNum==2) then
    alias pageToBeReleased R2;
    [MEMORY_FREE_LIST+pageToBeReleased]=[MEMORY_FREE_LIST+pageToBeReleased]-1;
    [SYSTEM_STATUS_TABLE+2]=[SYSTEM_STATUS_TABLE+2]+1;

    alias i R3;
    i=1;
    while(i<16) do
        if([PROCESS_TABLE+16*i+4]==WAIT_MEM) then
            [PROCESS_TABLE+16*i+4]=READY;
        endif;
        i=i+1;
    endwhile;

    return;
endif;

//get code page
if(functNum==5) then
breakpoint;
    alias blockNum R2;
    alias i R3;
    alias j R4;
    alias pageNum R5;
    i=0;
    while(i<16) do
        
        j=4;
        while(j<8) do
            if([DISK_MAP_TABLE + i*10 + j]==blockNum) then
                
                pageNum=[PAGE_TABLE_BASE+i*20+2*j];
                if(pageNum!=-1) then
                    [MEMORY_FREE_LIST+pageNum]=[MEMORY_FREE_LIST+pageNum]+1;
                    R0=pageNum;
                    return;
                endif;
            endif;
        j=j+1;
        endwhile;                 
        i=i+1;
    endwhile;
    

    multipush(R1,R2);
    R1=1;
    call MOD_2;
    pageNum=R0;
    multipop(R1,R2);
    breakpoint;
    multipush(R1,R2,R5);
    R1 = 2;
    R4 = blockNum;
    R2 = [SYSTEM_STATUS_TABLE + 1];
    R3 = pageNum;
    call MOD_4;
    multipop(R1,R2,R5);
    R0=pageNum;
    breakpoint;
    return;

endif;

if(functNum==4) then
    alias blockNum R2;
    alias currentPID R3;
    [DISK_FREE_LIST+blockNum]=[DISK_FREE_LIST+blockNum]-1;
    return;
endif;
