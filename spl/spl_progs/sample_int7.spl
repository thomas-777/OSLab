//SET MODE TO SYSTEM CALL NUMBER
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE +1] *16 +9]=5;

alias userSP R0;
userSP =SP;

[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 13] =SP;
SP=[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1]*16 + 11] * 512 - 1;

alias physicalPageNum R1;
alias offset R2;
alias fileDescPhysicalAddr R3;

physicalPageNum = [PTBR + 2*((userSP-4)/512)];
offset = (userSP -4 )% 512;
fileDescPhysicalAddr =(physicalPageNum *512) +offset;

alias fileDescriptor R4;
fileDescriptor=[fileDescPhysicalAddr];

//filedesc should be -2 for terminal 
if (fileDescriptor !=-2)
then
	//return -1;
	alias physicalAddrRetVal R5;
	physicalAddrRetVal =([PTBR +2 *((userSP -1)/512)]* 512) + ((userSP -1)% 512);
	[physicalAddrRetVal] =-1;
else 
	//arg2 is word to be printed
	physicalPageNum = [PTBR + 2 * ((userSP - 3) / 512)];
    offset = (userSP - 3) % 512;
    alias word R5;
    word = [physicalPageNum * 512 + offset];
	multipush(R0, R1, R2, R3, R4, R5);
	alias functionNumber R1;
	functionNumber=3;

	alias PID R2;
	PID=[SYSTEM_STATUS_TABLE+1];

	alias wordToPrint R3;
	wordToPrint=word;
	breakpoint;
	call MOD_4;

	multipop(R0, R1, R2, R3, R4, R5);

	//return 0 success
	alias physicalAddrRetVal R6;
	physicalAddrRetVal =([PTBR +2 *(userSP -1)/512] *512) + ((userSP-1) % 512);
	[physicalAddrRetVal]=0;
endif;

SP=userSP;
//set mode to 0
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
ireturn;
